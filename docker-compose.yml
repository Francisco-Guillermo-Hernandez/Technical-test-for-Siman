version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: tienda-postgres
    environment:
      POSTGRES_DB: tienda_db
      POSTGRES_USER: tienda_user
      POSTGRES_PASSWORD: tienda_pass
    mem_limit: 3g        
    mem_reservation: 1g
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tienda_user -d tienda_db"]
      interval: 60s
      timeout: 120s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: tienda-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    container_name: tienda-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: tienda-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: tienda-kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  catalogos-service:
    build:
      context: ./backend/services/Catalogos
      dockerfile: Dockerfile
    container_name: tienda-catalogos-service
    ports:
      - "8989:8989"  
    depends_on:
      - postgres
    environment:
      - URL=jdbc:postgresql://postgres:5432/tienda_db

  productos-service:
    build:
      context: ./backend/services/Productos
      dockerfile: Dockerfile
    container_name: tienda-productos-service
    ports:
      - "8282:8282"  
    depends_on:
      - postgres
      - redis
      - kafka
    environment:
      - URL=jdbc:postgresql://postgres:5432/tienda_db


  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend-tienda
    ports:
      - "5050:3000"
    depends_on:
      - productos-service


volumes:
  postgres_data:
  redis_data:
